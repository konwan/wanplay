1. [install and exec Nginx]：
    sudo apt-get install nginx
    sudo /etc/init.d/nginx start

Nginx是一个提供静态文件访问的web服务，然而，它不能直接执行托管Python应用程序，
而uWSGI解决了这个问题。让我们先安装uWSGI，稍候再配置Nginx和uWSGI之间的交互。

    sudo pip install uwsgi
    
##### can see "welcome to nginx" from localhost:80

2. [add flask hello.py]
    sudo mkdir -p /var/www/demoapp/ && sudo chown -R ubuntu:ubuntu /var/www/demoapp/ 
    
    
    ##/var/www/demoapp/hello.py

    from flask import Flask
    app = Flask(__name__)
 
    @app.route("/")
    def hello():
        return "Hello World!"
 
    if __name__ == "__main__":
        app.run(host='0.0.0.0', port=8080)


3. [config nginx]
   nginx 的默认网站目录 /usr/share/nginx/html
   /etc/nginx/conf.d/default.conf
   /etc/nginx/nginx.conf
   
   server {
    listen [port];
    server_name [server_domain_or_IP];

     location / {
        include proxy_params;
        proxy_pass http://unix:/home/sammy/myproject/myproject.sock;
    }
}


4.  [test]

$ nginx -t
  nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
  nginx: configuration file /etc/nginx/nginx.conf test is successful
  
$ nginx -s reload
2016/12/02 09:11:57 [notice] 34#34: signal process started
